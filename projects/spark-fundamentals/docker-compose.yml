version: '3'

services:
  # Spark Master
  spark-master:
    image: bitnami/spark:3.3.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"  # UI do Spark
      - "7077:7077"  # Porta do Spark Master
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
      - ./data:/opt/bitnami/spark/data
    networks:
      - spark-network

  # Spark Worker 1
  spark-worker-1:
    image: bitnami/spark:3.3.0
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
      - ./data:/opt/bitnami/spark/data
    depends_on:
      - spark-master
    networks:
      - spark-network

  # Spark Worker 2
  spark-worker-2:
    image: bitnami/spark:3.3.0
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs
      - ./data:/opt/bitnami/spark/data
    depends_on:
      - spark-master
    networks:
      - spark-network

  # Jupyter Notebook com PySpark
  jupyter:
    image: jupyter/pyspark-notebook:spark-3.3.0
    container_name: jupyter-pyspark
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - SPARK_OPTS="--master=spark://spark-master:7077 --driver-memory=1G --executor-memory=1G"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
    depends_on:
      - spark-master
    networks:
      - spark-network
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"

  # PostgreSQL para armazenamento
  postgres:
    image: postgres:14
    container_name: postgres-spark
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sparkdb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - spark-network

  # MinIO (S3 compatÃ­vel)
  minio:
    image: minio/minio:RELEASE.2022-10-29T06-21-33Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - spark-network

  # Criar buckets no MinIO
  minio-setup:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/spark-data;
      /usr/bin/mc policy set public minio/spark-data;
      exit 0;
      "
    networks:
      - spark-network

networks:
  spark-network:
    driver: bridge

volumes:
  postgres-data:
  minio-data:
